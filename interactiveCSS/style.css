h1,p{
    margin:0;
    /* font-size: 2em; */
}
body{
    margin: 0;
    /* font-size: 2em; */
}



.container{
    /* font-size: 0; */
    /* margin: 0 auto; */
    /* margin-left: auto;
    margin-right: auto;   auto : 남는 여백을 알아서 나눠 가진다 (가운데 정렬) */
    /* max-width: 1000px;  유연하게 움직이되 브라우저가 1000이 넘어가면 거기까지만 늘어난다 ! */
    background: pink;
    /* 자식들이 float가 되어있으면 부모는 자식을 품지 않고 있는 것으로 인식된다!!!!! */
    /* 필요 없는 곳을 clear 해주면 된다. */
}

/* 가상 엘리먼트 생성!! */
/* .container:after{
    content : '';
    display: block;
    clear: both;
    height: 0;
    visibility: hidden;
}
 */


/* 공통으로 */
.item{
    /* float: left;  해당 아이템을 왼쪽에 두고 주위에 싸고 돈다.. 이 경우 자연스럽게 display-inline처럼보임 */

    /* a와 b를 나란히 하기 위해
    display: inline-block; */
    /* vertical-align: top; */
    /* 내부 여백을 준다  */
    padding: 5%;      /* % 값을 주어서 유연하게 움직이게*/
    /* display: block 일 때는 width굳이 건들지 말자! 알아서 패딩 제외하고
    알아서 꽉 차는 애니까 */
    /* font-size: 1rem;    root em : 16px html의 폰트 기본 사이즈를 쓰겠다. */
    
}

 /* box-sizing:content-box (기본)에서
    padding+b+w+h 이니까 a:5+5+30   b: 5+5+50 =>100% */
    /* 따라서 패딩을 제외하고 width, heigth값 */
.item-a{
    /* width:  30%;   */
    background-color: yellow;

}

.item-b{
    /* width: 50%; */
    background-color: yellowgreen;

}


@media screen and (min-width:700px) {
    .container{
        font-size: 0;
    }
    .item{
        display: inline-block;
        font-size: 1rem;
        vertical-align: top;
    }
    .item-a{
        width: 30%;
    }
    .item-b{
        width: 50%;
    }
}